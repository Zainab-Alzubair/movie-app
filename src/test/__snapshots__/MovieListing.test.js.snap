// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header component tests Header renderu 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="header"
      >
        <svg
          fill="none"
          height="1em"
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          style="color: white; font-size: 30px;"
          viewBox="0 0 24 24"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <line
            x1="3"
            x2="21"
            y1="12"
            y2="12"
          />
          <line
            x1="3"
            x2="21"
            y1="6"
            y2="6"
          />
          <line
            x1="3"
            x2="21"
            y1="18"
            y2="18"
          />
        </svg>
        <div
          class="logo"
        >
          <a
            href="/"
          >
            Movie App
          </a>
        </div>
        <div
          class="search-bar"
        >
          <form>
            <input
              placeholder="Search Movies or Shows"
              type="text"
              value=""
            />
            <button
              type="submit"
            >
              <i
                class="fa fa-search"
              />
            </button>
          </form>
        </div>
        <svg
          fill="none"
          height="1em"
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          style="color: white; font-size: 25px;"
          viewBox="0 0 24 24"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"
          />
          <path
            d="M19 10v2a7 7 0 0 1-14 0v-2"
          />
          <line
            x1="12"
            x2="12"
            y1="19"
            y2="23"
          />
          <line
            x1="8"
            x2="16"
            y1="23"
            y2="23"
          />
        </svg>
        <div
          class="user-image"
        >
          <img
            alt="user"
            src="user-image.png"
          />
        </div>
      </div>
      ,
    </div>
  </body>,
  "container": <div>
    <div
      class="header"
    >
      <svg
        fill="none"
        height="1em"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        style="color: white; font-size: 30px;"
        viewBox="0 0 24 24"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <line
          x1="3"
          x2="21"
          y1="12"
          y2="12"
        />
        <line
          x1="3"
          x2="21"
          y1="6"
          y2="6"
        />
        <line
          x1="3"
          x2="21"
          y1="18"
          y2="18"
        />
      </svg>
      <div
        class="logo"
      >
        <a
          href="/"
        >
          Movie App
        </a>
      </div>
      <div
        class="search-bar"
      >
        <form>
          <input
            placeholder="Search Movies or Shows"
            type="text"
            value=""
          />
          <button
            type="submit"
          >
            <i
              class="fa fa-search"
            />
          </button>
        </form>
      </div>
      <svg
        fill="none"
        height="1em"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        style="color: white; font-size: 25px;"
        viewBox="0 0 24 24"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"
        />
        <path
          d="M19 10v2a7 7 0 0 1-14 0v-2"
        />
        <line
          x1="12"
          x2="12"
          y1="19"
          y2="23"
        />
        <line
          x1="8"
          x2="16"
          y1="23"
          y2="23"
        />
      </svg>
      <div
        class="user-image"
      >
        <img
          alt="user"
          src="user-image.png"
        />
      </div>
    </div>
    ,
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`listingRender component tests listingRender renderu 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="movie-wrapper"
      >
        <div
          class="movie-list"
        >
          <div
            class="hero"
          >
            <h2>
              <svg
                fill="currentColor"
                height="1em"
                stroke="currentColor"
                stroke-width="0"
                style="color: black; font-size: 100px;"
                viewBox="0 0 24 24"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M18 11c0-.959-.68-1.761-1.581-1.954C16.779 8.445 17 7.75 17 7c0-2.206-1.794-4-4-4-1.517 0-2.821.857-3.5 2.104C8.821 3.857 7.517 3 6 3 3.794 3 2 4.794 2 7c0 .902.312 1.727.817 2.396A1.994 1.994 0 0 0 2 11v8c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2v-2.638l4 2v-7l-4 2V11zm-5-6c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2zM6 5c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2zM4 19v-8h12l.002 8H4z"
                />
              </svg>
            </h2>
            <h2>
               (undefined) Movies
            </h2>
          </div>
          <div
            class="movie-container"
          >
            <div
              class="movies-error"
            >
              <h3 />
            </div>
          </div>
        </div>
      </div>
      ,
    </div>
  </body>,
  "container": <div>
    <div
      class="movie-wrapper"
    >
      <div
        class="movie-list"
      >
        <div
          class="hero"
        >
          <h2>
            <svg
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              stroke-width="0"
              style="color: black; font-size: 100px;"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M18 11c0-.959-.68-1.761-1.581-1.954C16.779 8.445 17 7.75 17 7c0-2.206-1.794-4-4-4-1.517 0-2.821.857-3.5 2.104C8.821 3.857 7.517 3 6 3 3.794 3 2 4.794 2 7c0 .902.312 1.727.817 2.396A1.994 1.994 0 0 0 2 11v8c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2v-2.638l4 2v-7l-4 2V11zm-5-6c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2zM6 5c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2zM4 19v-8h12l.002 8H4z"
              />
            </svg>
          </h2>
          <h2>
             (undefined) Movies
          </h2>
        </div>
        <div
          class="movie-container"
        >
          <div
            class="movies-error"
          >
            <h3 />
          </div>
        </div>
      </div>
    </div>
    ,
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
